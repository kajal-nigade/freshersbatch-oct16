6. Operator overloading
Create a class called Money with a double amount and a String currency (like USD or 
EUR). Implement a plus method that checks that the currencies are the same and, if 
so, returns a new Money instance with the sum of the amounts and the correct 
currency. Write a similar minus method.
Write a MoneyTest class in Groovy that uses + and - and verifies that they work 
properly



class Money {
    private String Currency;
    private double Amount;

    Money(String Currency, double Amount) {
        this.Currency = Currency
        this.Amount =Amount
    }

    def plus(Money other) {
        if(Currency=="INR")
        return new Money(this.Currency + ", " + other.Currency, this.Amount + other.Amount)
    }

    @Override
    public String toString() {
        return "Money{" +
                "Currency='" +Currency + '\'' +
                ", Amount=" + Amount +
                '}';
    }
}

def Money1 = new Money("INR", 500)
def Money2 = new Money("INR", 350)
def Money3 = Money1 + Money2
println Money3



class MoneyTest {
    private String Currency;
    private double Amount;

    MoneyTest(String Currency, double Amount) {
        this.Currency = Currency
        this.Amount =Amount
    }

    def minus(MoneyTest other) {
        if(Currency=="INR")
        return new MoneyTest(this.Currency + ", " + other.Currency, this.Amount - other.Amount)
    }

    @Override
    public String toString() {
        return "MoneyTest{" +
                "Currency='" +Currency + '\'' +
                ", Amount=" + Amount +
                '}';
    }
}

def MoneyTest1 = new MoneyTest("INR", 500)
def MoneyTest2 = new MoneyTest("INR", 350)
def MoneyTest3 = MoneyTest1 - MoneyTest2
println MoneyTest3

